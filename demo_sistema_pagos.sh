#!/bin/bash

# Script de Demostraci√≥n del Sistema de Pagos por Cuotas
# Sistema de Gesti√≥n Acad√©mica

echo "üéì DEMOSTRACI√ìN DEL SISTEMA DE PAGOS POR CUOTAS"
echo "================================================"
echo ""

# Colores para la salida
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Funci√≥n para mostrar t√≠tulos
show_title() {
    echo -e "${BLUE}$1${NC}"
    echo "----------------------------------------"
}

# Funci√≥n para mostrar comandos
show_command() {
    echo -e "${YELLOW}Comando:${NC} $1"
    echo -e "${GREEN}Descripci√≥n:${NC} $2"
    echo ""
}

# Funci√≥n para mostrar ejemplo
show_example() {
    echo -e "${YELLOW}Ejemplo:${NC}"
    echo "  $1"
    echo ""
}

echo "Este script demuestra c√≥mo usar el Sistema de Pagos por Cuotas completo."
echo ""

# 1. Comando para crear plan de pago
show_title "1. CREAR PLAN DE PAGO PARA UN ESTUDIANTE"
show_command "./start_dev.sh django crear_plan_pago --estudiante_id 1 --evento_id 1" \
    "Crea un plan de pago completo para un estudiante en un evento espec√≠fico"
show_example "./start_dev.sh django crear_plan_pago --estudiante_id 1 --evento_id 1 --numero_cuotas 6"

echo "Este comando:"
echo "  ‚Ä¢ Crea un plan de pago para el estudiante"
echo "  ‚Ä¢ Genera autom√°ticamente las cuotas mensuales"
echo "  ‚Ä¢ Crea la matr√≠cula del estudiante"
echo "  ‚Ä¢ Inicializa el estado de pagos"
echo ""

# 2. Comando para registrar pagos
show_title "2. REGISTRAR PAGO DE CUOTA"
show_command "./start_dev.sh django registrar_pago_cuota --cuota_id 1 --monto_pagado 100.00 --metodo_pago transferencia" \
    "Registra el pago de una cuota espec√≠fica"
show_example "./start_dev.sh django registrar_pago_cuota --cuota_id 1 --monto_pagado 100.00 --metodo_pago transferencia --institucion_financiera_id 1 --codigo_comprobante 'TRX-001'"

echo "Este comando:"
echo "  ‚Ä¢ Registra el pago de la cuota"
echo "  ‚Ä¢ Actualiza el estado de la cuota"
echo "  ‚Ä¢ Actualiza el estado general del estudiante"
echo "  ‚Ä¢ Permite adjuntar comprobantes y observaciones"
echo ""

# 3. Comando para verificar cuotas atrasadas
show_title "3. VERIFICAR CUOTAS ATRASADAS"
show_command "./start_dev.sh django verificar_cuotas_atrasadas" \
    "Verifica y marca las cuotas que est√°n atrasadas"
show_example "./start_dev.sh django verificar_cuotas_atrasadas --mostrar_estudiantes"

echo "Este comando:"
echo "  ‚Ä¢ Busca cuotas vencidas y las marca como atrasadas"
echo "  ‚Ä¢ Actualiza el estado de pagos del evento"
echo "  ‚Ä¢ Puede mostrar lista de estudiantes atrasados"
echo ""

# 4. Comando para resumen de estudiante
show_title "4. RESUMEN COMPLETO DE ESTUDIANTE"
show_command "./start_dev.sh django resumen_estudiante --estudiante_id 1 --evento_id 1" \
    "Muestra el resumen completo del estado de pagos de un estudiante"
show_example "./start_dev.sh django resumen_estudiante --estudiante_id 1 --evento_id 1"

echo "Este comando muestra:"
echo "  ‚Ä¢ Estado de matr√≠cula, colegiatura y certificado"
echo "  ‚Ä¢ Progreso de pagos en porcentaje"
echo "  ‚Ä¢ Detalle de cada cuota"
echo "  ‚Ä¢ Recomendaciones basadas en el estado"
echo ""

# 5. Comando para estad√≠sticas de evento
show_title "5. ESTAD√çSTICAS COMPLETAS DEL EVENTO"
show_command "./start_dev.sh django estadisticas_evento --evento_id 1" \
    "Muestra estad√≠sticas completas de pagos para un evento"
show_example "./start_dev.sh django estadisticas_evento --evento_id 1 --mostrar_estudiantes_atrasados"

echo "Este comando muestra:"
echo "  ‚Ä¢ Estad√≠sticas generales del evento"
echo "  ‚Ä¢ Total de estudiantes y cuotas"
echo "  ‚Ä¢ Progreso general de pagos"
echo "  ‚Ä¢ Lista de estudiantes atrasados"
echo "  ‚Ä¢ An√°lisis y recomendaciones"
echo ""

# Flujo de trabajo completo
show_title "FLUJO DE TRABAJO COMPLETO"
echo "1. üìö Configurar evento con costos (matr√≠cula, colegiatura, certificado)"
echo "2. üë§ Matricular estudiante usando 'crear_plan_pago'"
echo "3. üí∞ Registrar pagos mensuales usando 'registrar_pago_cuota'"
echo "4. üîç Monitorear estado usando 'resumen_estudiante'"
echo "5. ‚ö†Ô∏è  Verificar cuotas atrasadas usando 'verificar_cuotas_atrasadas'"
echo "6. üìä Revisar estad√≠sticas del evento usando 'estadisticas_evento'"
echo ""

# Casos de uso
show_title "CASOS DE USO COMUNES"
echo "üÜï Nuevo Estudiante:"
echo "   ./start_dev.sh django crear_plan_pago --estudiante_id 1 --evento_id 1"
echo ""
echo "üí≥ Pago Mensual:"
echo "   ./start_dev.sh django registrar_pago_cuota --cuota_id 1 --monto_pagado 100.00 --metodo_pago transferencia"
echo ""
echo "üìä Monitoreo Diario:"
echo "   ./start_dev.sh django verificar_cuotas_atrasadas --mostrar_estudiantes"
echo "   ./start_dev.sh django estadisticas_evento --evento_id 1"
echo ""

# Verificaci√≥n del sistema
show_title "VERIFICACI√ìN DEL SISTEMA"
echo "Para verificar que todo est√© funcionando:"
echo "  ./start_dev.sh django check"
echo "  ./start_dev.sh django showmigrations"
echo ""

echo -e "${GREEN}¬°El Sistema de Pagos por Cuotas est√° listo para usar! üéâ${NC}"
echo ""
echo "üìñ Para m√°s informaci√≥n, consulta la documentaci√≥n en: docs/SISTEMA_PAGOS_CUOTAS.md"
echo ""
echo "üöÄ ¬°Comienza a usar el sistema!"
