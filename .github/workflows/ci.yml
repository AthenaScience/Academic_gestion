name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Prepare .env (SQLite por defecto)
        working-directory: backend
        run: |
          cp env.example .env
          echo "DJANGO_DEBUG=True" >> .env
          echo "ALLOWED_HOSTS=127.0.0.1,localhost" >> .env
          # Usar SQLite (sin DATABASE_URL)

      - name: Run migrations
        working-directory: backend
        run: |
          python manage.py migrate --noinput

      - name: Lint
        working-directory: backend
        run: |
          flake8 . || true

      - name: Type check
        working-directory: backend
        run: |
          mypy . || true

      - name: Run tests with pytest
        working-directory: backend
        run: |
          pytest

      - name: Upload coverage artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-backend
          path: |
            backend/htmlcov/
            backend/coverage.xml

  flutter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'
          channel: 'stable'
      - name: Flutter analyze
        working-directory: flutter_app
        run: |
          flutter pub get
          flutter analyze
      - name: Flutter tests
        working-directory: flutter_app
        run: |
          flutter test || true

  docker-build:
    runs-on: ubuntu-latest
    needs: [backend, flutter]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build backend Docker image
        working-directory: backend
        run: |
          docker build -t gestion-academica-backend:ci .
name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt
      - name: Lint & Format
        run: |
          black --check .
          isort --check-only .
          flake8 .
      - name: Tests
        env:
          DJANGO_DEBUG: 'True'
          DJANGO_SECRET_KEY: 'test-secret'
          ALLOWED_HOSTS: 'localhost,127.0.0.1'
          DATABASE_URL: 'sqlite:////home/runner/work/db.sqlite3'
        run: |
          pytest --maxfail=1 --disable-warnings -q

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install deps
        run: npm ci || npm install
      - name: Build
        run: npm run build
